{"ast":null,"code":"var _jsxFileName = \"/Users/umairmustafa/myGithub/bootCamp/NoteAppReact/src/components/home/home.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './home.css'; // export default class Home extends Component {\n// \tstate = {\n// \t\tnotes:\n// \t\t\tJSON.parse(localStorage.getItem('Notes')) == null\n// \t\t\t\t? []\n// \t\t\t\t: JSON.parse(localStorage.getItem('Notes')),\n// \t\tsortedbyCreated: [],\n// \t\tsortedbyAlphabet: []\n// \t};\n// \tremove = (index) => {\n// \t\tconsole.log(index);\n// \t\tthis.state.notes.splice(index, 1);\n// \t\twindow.localStorage.setItem('Notes', JSON.stringify(this.state.notes));\n// \t\twindow.location.reload();\n// \t};\n// \tedit = (index) => {\n// \t\tlet value = window.prompt('Enter Changing in the body');\n// \t\tthis.state.notes[index].body = value;\n// \t\twindow.localStorage.setItem('Notes', JSON.stringify(this.state.notes));\n// \t\twindow.location.reload();\n// \t};\n// \tsortByCreated = () => {\n// \t\tthis.state.sortedbyCreated = this.state.notes.sort();\n// \t\tconsole.log(this.state.sortedbyCreated);\n// \t};\n// \tsortByAlphabet = () => {\n// \t\tthis.state.sortedbyAlphabet = this.state.notes;\n// \t\tfor (let i = 0; i < this.state.sortedbyAlphabet; i++) {\n// \t\t\tfor (let j = i; j < this.state.sortedbyAlphabet - i - 1; j++) {\n// \t\t\t\tif (\n// \t\t\t\t\tthis.state.sortedbyAlphabet[j].title >\n// \t\t\t\t\tthis.state.sortedbyAlphabet[j + 1].title\n// \t\t\t\t) {\n// \t\t\t\t\tconst temp = this.state.sortedbyAlphabet[j];\n// \t\t\t\t\tthis.state.sortedbyAlphabet[j] = this.state.sortedbyAlphabet[j + 1];\n// \t\t\t\t\tthis.state.sortedbyAlphabet[j + 1] = temp;\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t\tconsole.log(this.state.sortedbyAlphabet);\n// \t};\n// \tsearch = (e) => {\n// \t\tconst notes = this.state.notes.filter(\n// \t\t\t(note) => note.title == e.target.value\n// \t\t);\n// \t\treturn notes.map((note) => {\n// \t\t\tconsole.log(note);\n// \t\t\treturn (\n// \t\t\t\t<div>\n// \t\t\t\t\t<p>\n// \t\t\t\t\t\t{note.title}\n// \t\t\t\t\t\t<br />\n// \t\t\t\t\t\t{note.body}\n// \t\t\t\t\t\t<br />\n// \t\t\t\t\t</p>\n// \t\t\t\t</div>\n// \t\t\t);\n// \t\t});\n// \t};\n// \trender() {\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\t<div className=\"noteContainer\">\n// \t\t\t\t\t{this.state.notes.map((note, i) => (\n// \t\t\t\t\t\t<div id={i}>\n// \t\t\t\t\t\t\t<p>\n// \t\t\t\t\t\t\t\t{note.title} <br />\n// \t\t\t\t\t\t\t\t{note.body}\n// \t\t\t\t\t\t\t\t<br />\n// \t\t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\t\tthis.edit(i);\n// \t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\t\tEdit\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\t\tthis.remove(i);\n// \t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\t\tDelete\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t</p>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t))}\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"container\">\n// \t\t\t\t\t<Link to=\"/note\">\n// \t\t\t\t\t\t<button>Create Note</button>\n// \t\t\t\t\t</Link>\n// \t\t\t\t</div>\n// \t\t\t\t<button className=\"btn\" onClick={this.sortByCreated}>\n// \t\t\t\t\tsortByCreated\n// \t\t\t\t</button>\n// \t\t\t\t<button className=\"btn\" onClick={this.sortByAlphabet}>\n// \t\t\t\t\tsortByAlphabet\n// \t\t\t\t</button>\n// \t\t\t\t<div className=\"container\">\n// \t\t\t\t\t<input\n// \t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\tplaceholder=\"Type title to search\"\n// \t\t\t\t\t\tid=\"input\"\n// \t\t\t\t\t\tonChange={this.search}\n// \t\t\t\t\t/>\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"noteContainer\">{this.search}</div>\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }\n\nfunction displayStarRating(starRating) {\n  var result = '';\n\n  for (var i = 1; i <= starRating; i++) {\n    result += '<div><img src = \"/public/star.jpg\"></div>';\n  }\n\n  return result;\n}\n\nclass Reviews extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, displayStarRating(4));\n  }\n\n} // export default home;","map":{"version":3,"sources":["/Users/umairmustafa/myGithub/bootCamp/NoteAppReact/src/components/home/home.jsx"],"names":["React","Component","Link","displayStarRating","starRating","result","i","Reviews","constructor","props","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAAriBAAT,CAA2BC,UAA3B,EAAuC;AACtC,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,UAArB,EAAiCE,CAAC,EAAlC,EAAsC;AACrCD,IAAAA,MAAM,IAAI,2CAAV;AACA;;AAED,SAAOA,MAAP;AACA;;AAED,MAAME,OAAN,SAAsBP,KAAK,CAACC,SAA5B,CAAsC;AACrCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA;;AAEDC,EAAAA,MAAM,GAAG;AACR,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMP,iBAAiB,CAAC,CAAD,CAAvB,CAAP;AACA;;AAPoC,C,CAUtC","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './home.css';\n\n// export default class Home extends Component {\n// \tstate = {\n// \t\tnotes:\n// \t\t\tJSON.parse(localStorage.getItem('Notes')) == null\n// \t\t\t\t? []\n// \t\t\t\t: JSON.parse(localStorage.getItem('Notes')),\n// \t\tsortedbyCreated: [],\n// \t\tsortedbyAlphabet: []\n// \t};\n\n// \tremove = (index) => {\n// \t\tconsole.log(index);\n// \t\tthis.state.notes.splice(index, 1);\n// \t\twindow.localStorage.setItem('Notes', JSON.stringify(this.state.notes));\n// \t\twindow.location.reload();\n// \t};\n\n// \tedit = (index) => {\n// \t\tlet value = window.prompt('Enter Changing in the body');\n// \t\tthis.state.notes[index].body = value;\n// \t\twindow.localStorage.setItem('Notes', JSON.stringify(this.state.notes));\n// \t\twindow.location.reload();\n// \t};\n\n// \tsortByCreated = () => {\n// \t\tthis.state.sortedbyCreated = this.state.notes.sort();\n// \t\tconsole.log(this.state.sortedbyCreated);\n// \t};\n\n// \tsortByAlphabet = () => {\n// \t\tthis.state.sortedbyAlphabet = this.state.notes;\n\n// \t\tfor (let i = 0; i < this.state.sortedbyAlphabet; i++) {\n// \t\t\tfor (let j = i; j < this.state.sortedbyAlphabet - i - 1; j++) {\n// \t\t\t\tif (\n// \t\t\t\t\tthis.state.sortedbyAlphabet[j].title >\n// \t\t\t\t\tthis.state.sortedbyAlphabet[j + 1].title\n// \t\t\t\t) {\n// \t\t\t\t\tconst temp = this.state.sortedbyAlphabet[j];\n// \t\t\t\t\tthis.state.sortedbyAlphabet[j] = this.state.sortedbyAlphabet[j + 1];\n// \t\t\t\t\tthis.state.sortedbyAlphabet[j + 1] = temp;\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t\tconsole.log(this.state.sortedbyAlphabet);\n// \t};\n\n// \tsearch = (e) => {\n// \t\tconst notes = this.state.notes.filter(\n// \t\t\t(note) => note.title == e.target.value\n// \t\t);\n// \t\treturn notes.map((note) => {\n// \t\t\tconsole.log(note);\n// \t\t\treturn (\n// \t\t\t\t<div>\n// \t\t\t\t\t<p>\n// \t\t\t\t\t\t{note.title}\n// \t\t\t\t\t\t<br />\n// \t\t\t\t\t\t{note.body}\n// \t\t\t\t\t\t<br />\n// \t\t\t\t\t</p>\n// \t\t\t\t</div>\n// \t\t\t);\n// \t\t});\n// \t};\n\n// \trender() {\n// \t\treturn (\n// \t\t\t<div>\n// \t\t\t\t<div className=\"noteContainer\">\n// \t\t\t\t\t{this.state.notes.map((note, i) => (\n// \t\t\t\t\t\t<div id={i}>\n// \t\t\t\t\t\t\t<p>\n// \t\t\t\t\t\t\t\t{note.title} <br />\n// \t\t\t\t\t\t\t\t{note.body}\n// \t\t\t\t\t\t\t\t<br />\n// \t\t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\t\tthis.edit(i);\n// \t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\t\tEdit\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t\t<button\n// \t\t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\t\tthis.remove(i);\n// \t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\t\tDelete\n// \t\t\t\t\t\t\t\t</button>\n// \t\t\t\t\t\t\t</p>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t))}\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"container\">\n// \t\t\t\t\t<Link to=\"/note\">\n// \t\t\t\t\t\t<button>Create Note</button>\n// \t\t\t\t\t</Link>\n// \t\t\t\t</div>\n// \t\t\t\t<button className=\"btn\" onClick={this.sortByCreated}>\n// \t\t\t\t\tsortByCreated\n// \t\t\t\t</button>\n// \t\t\t\t<button className=\"btn\" onClick={this.sortByAlphabet}>\n// \t\t\t\t\tsortByAlphabet\n// \t\t\t\t</button>\n// \t\t\t\t<div className=\"container\">\n// \t\t\t\t\t<input\n// \t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\tplaceholder=\"Type title to search\"\n// \t\t\t\t\t\tid=\"input\"\n// \t\t\t\t\t\tonChange={this.search}\n// \t\t\t\t\t/>\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"noteContainer\">{this.search}</div>\n// \t\t\t</div>\n// \t\t);\n// \t}\n// }\n\nfunction displayStarRating(starRating) {\n\tvar result = '';\n\tfor (var i = 1; i <= starRating; i++) {\n\t\tresult += '<div><img src = \"/public/star.jpg\"></div>';\n\t}\n\n\treturn result;\n}\n\nclass Reviews extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\treturn <div>{displayStarRating(4)}</div>;\n\t}\n}\n\n// export default home;\n"]},"metadata":{},"sourceType":"module"}